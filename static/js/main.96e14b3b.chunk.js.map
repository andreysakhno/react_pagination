{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pageCount","Math","ceil","pageNumbers","isFirstPage","isLastPage","className","cn","disabled","href","onClick","map","num","active","items","length","pageElementCounts","App","useState","setPerPage","setPage","itemsFrom","itemsTo","min","itemsAtPage","slice","id","value","onChange","event","target","count","htmlFor","page","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAYC,KAAKC,KAAKN,EAAQC,GAC9BM,EAAcd,EAAW,EAAGW,GAC5BI,EAA8B,IAAhBN,EACdO,EAAaP,IAAgBE,EAcnC,OACE,qBAAIM,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAG,YAAa,CAAEC,SAAUJ,IADzC,SAGE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAtBiB,WAClBN,GACHL,EAAaD,EAAc,IAezB,oBAWDK,EAAYQ,KAAI,SAAAC,GAAG,OAClB,oBACEN,UAAWC,IAAG,YAAa,CAAEM,OAAQD,IAAQd,IAD/C,SAIE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMX,EAAaa,IAJ9B,SAMGA,KAREA,MAaT,oBACEN,UAAWC,IAAG,YAAa,CAAEC,SAAUH,IADzC,SAGE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QA9Ca,WACdL,GACHN,EAAaD,EAAc,IAuCzB,wBChEFgB,EAAQzB,EAAW,EAAG,IAAIsB,KAAI,SAAAlB,GAAC,qBAAYA,MAC3CG,EAAQkB,EAAMC,OACdC,EAAoB,CAAC,EAAG,EAAG,GAAI,IAExBC,EAAgB,WAC3B,MAA8BC,mBAASF,EAAkB,IAAzD,mBAAOnB,EAAP,KAAgBsB,EAAhB,KACA,EAA+BD,mBAAS,GAAxC,mBAAOpB,EAAP,KAAoBsB,EAApB,KAEMC,GAAavB,EAAc,GAAKD,EAAU,EAC1CyB,EAAUrB,KAAKsB,IAAIzB,EAAcD,EAASD,GAW1C4B,EAAcV,EAAMW,MAAMJ,EAAY,EAAGC,GAE/C,OACE,sBAAKhB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCuB,EADjC,cACgDC,EADhD,eAC8D1B,EAD9D,OAIA,sBAAKU,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRoB,GAAG,kBACHpB,UAAU,eACVqB,MAAO9B,EACP+B,SA1BkB,SAACC,GAC3BV,GAAYU,EAAMC,OAAOH,OACzBP,EAAQ,IAmBF,SAOIJ,EAAkBL,KAAI,SAACoB,GAAD,OACtB,wBAAoBJ,MAAOI,EAA3B,SACGA,GADUA,UAOnB,uBAAOC,QAAQ,kBAAkB1B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAxCmB,SAACkC,GACxBb,EAAQa,MA0CJT,EAAYT,QACZ,6BACGS,EAAYb,KAAK,SAAAuB,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YClEnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.96e14b3b.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageCount = Math.ceil(total / perPage);\n  const pageNumbers = getNumbers(1, pageCount);\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === pageCount;\n\n  const goToPreviousPage = () => {\n    if (!isFirstPage) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const goToNextPage = () => {\n    if (!isLastPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn('page-item', { disabled: isFirstPage })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={goToPreviousPage}\n        >\n          «\n        </a>\n      </li>\n\n      {pageNumbers.map(num => (\n        <li\n          className={cn('page-item', { active: num === currentPage })}\n          key={num}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${num}`}\n            onClick={() => onPageChange(num)}\n          >\n            {num}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={cn('page-item', { disabled: isLastPage })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={goToNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\nconst total = items.length;\nconst pageElementCounts = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(pageElementCounts[1]);\n  const [currentPage, setPage] = useState(1);\n\n  const itemsFrom = (currentPage - 1) * perPage + 1;\n  const itemsTo = Math.min(currentPage * perPage, total);\n\n  const handlePerPageSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setPage(1);\n  };\n\n  const handlePageChange = (page: number) => {\n    setPage(page);\n  };\n\n  const itemsAtPage = items.slice(itemsFrom - 1, itemsTo);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${itemsFrom} - ${itemsTo} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageSelect}\n          >\n            { pageElementCounts.map((count) => (\n              <option key={count} value={count}>\n                {count}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n\n      { itemsAtPage.length && (\n        <ul>\n          {itemsAtPage.map((item => (\n            <li\n              data-cy=\"item\"\n              key={item}\n            >\n              {item}\n            </li>\n          )))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}